class House:
    houses_history = []
    def __new__(cls, *args, **kwargs):
        instance = super(House, cls).__new__(cls)
        instance.name = args[0]
        cls.houses_history.append(instance.name)
        return instance

    def __init__(self, name, number_of_floors):
        self.name = name
        self.number_of_floors = number_of_floors
    def go_to(self, new_floor = int(input('Введите номер этажа: '))):
        if new_floor > self.number_of_floors or new_floor < 1:
            print('Такого этажа не существует.')
        else:
            for floor in range(1, new_floor + 1):
                print(floor)

    def __len__(self):
        return self.number_of_floors

    def __str__(self):
        return (f'Название:{self.name}, кол-во этажей: {self.number_of_floors}')

    def __eq__(self, other):
        if isinstance(other, House):
            return self.number_of_floors == other.number_of_floors
        return NotImplemented

    def __ne__(self, other):
        return not self.__eq__(other)

    def __lt__(self, other):
        if isinstance(other, House):
            return self.number_of_floors < other.number_of_floors
        return NotImplemented

    def __le__(self, other):
        if isinstance(other, House):
            return self.number_of_floors <= other.number_of_floors
        return NotImplemented

    def __gt__(self, other):
        if isinstance(other, House):
            return self.number_of_floors > other.number_of_floors
        return NotImplemented

    def __ge__(self, other):
        if isinstance(other, House):
            return self.number_of_floors >= other.number_of_floors
        return NotImplemented

    def __add__(self, value):
        self.number_of_floors += value
        return self

    def __radd__(self, value):
        return self.__add__(value)

    def __iadd__(self, value):
        return self.__add__(value)

    def __del__(self):
        print(f' {self.name} снесен, но он останется в истории')



house = House('ЖК Эльбрус', 30)
house2 = House('ЖК Матрёшки', 20)
house3 = House('ЖК Акация', 20)


house.go_to()

print(house)
print(len(house))

another_house = House('ЖК Снегири', 30)
print(house == another_house)
print(house < another_house)




house += 5
print(house)

print(House.houses_history)

del house3
del house2

print(House.houses_history)


